{"version":3,"sources":["webpack:///./src/pages/sandbox/quote.js"],"names":["getRandomQuote","quotesArray","min","max","length","Math","floor","random","node","QuotePage","props","state","randomQuote","data","allGoodreadsQuotesExport20190817Csv","edges","changeQuote","this","setState","prevState","render","dangerouslySetInnerHTML","__html","Quote","Author","hidden","Book","type","onClick","React","Component","query"],"mappings":"uOASMA,EAAiB,SAAAC,GACrB,IAJuBC,EAAKC,EAK5B,OAAOF,GALgBC,EAIgB,EAJXC,EAIcF,EAAYG,OAAS,EAHxDC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,IAAMA,IAIlBM,MAIhBC,E,YACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,YAAaZ,EAAeU,EAAMG,KAAKC,oCAAoCC,QAH5D,E,oCAOnBC,YAAA,WACEC,KAAKC,UAAS,SAACC,EAAWT,GAAZ,MAAuB,CACnCE,YAAaZ,EAAeU,EAAMG,KAAKC,oCAAoCC,Y,EAI/EK,OAAA,WAAU,IAAD,OACP,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,8CAEA,6BAEA,2BACE,2BAAG,0BAAMC,wBAAyB,CAAEC,OAAQL,KAAKN,MAAMC,YAAYW,WAErE,2BACE,mCAAQ,2BAAIN,KAAKN,MAAMC,YAAYY,SACnC,0BAAMC,QAASR,KAAKN,MAAMC,YAAYc,MAAtC,KAA+CT,KAAKN,MAAMC,YAAYc,KAAtE,MAIF,6BACA,6BAEA,0FAEE,6BAFF,kCAEuC,4BAAQC,KAAK,SAASC,QAAS,kBAAM,EAAKZ,gBAA1C,UAFvC,yB,GAnC6Ba,IAAMC,WA6ChCC,EAAK","file":"component---src-pages-sandbox-quote-js-6bddbd8b43578680cfe2.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../../components/seo'\nimport Layout from '../../components/layout'\n\nconst randomGenerator = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\nconst getRandomQuote = quotesArray => {\n  const randomPosition = randomGenerator(0, quotesArray.length - 1)\n  return quotesArray[randomPosition].node\n}\n\n// export default ({ data }) => {\nexport default class QuotePage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      randomQuote: getRandomQuote(props.data.allGoodreadsQuotesExport20190817Csv.edges),\n    }\n  }\n\n  changeQuote() {\n    this.setState((prevState, props) => ({\n      randomQuote: getRandomQuote(props.data.allGoodreadsQuotesExport20190817Csv.edges),\n    }))\n  }\n  \n  render() {\n    return (\n      <>\n        <SEO />\n        <Layout>\n          <h1>A Random Quote</h1>\n\n          <br />\n\n          <p>\n            <i><span dangerouslySetInnerHTML={{ __html: this.state.randomQuote.Quote }} /></i>\n          </p>\n          <p>\n            <span>â€• <b>{this.state.randomQuote.Author}</b></span>\n            <span hidden={!this.state.randomQuote.Book}> ({this.state.randomQuote.Book})</span>\n            {/* <span> / <a href={`https://www.goodreads.com/quotes/${randomQuote.Goodreads_Quote_Id}`} target=\"_blank\" rel=\"noopener noreferrer\">Goodreads</a></span> */}\n          </p>\n\n          <br />\n          <hr />\n\n          <p>\n            The quote is taken from my Goodreads account's saved quotes.\n            <br />Refresh the page or click this <button type=\"button\" onClick={() => this.changeQuote()}>button</button> to get a new one!\n          </p>\n        </Layout>\n      </>\n    )\n  }\n}\n\nexport const query = graphql`\n  {\n    allGoodreadsQuotesExport20190817Csv {\n      edges {\n        node {\n          Goodreads_Quote_Id\n          Author\n          Book\n          Quote\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}