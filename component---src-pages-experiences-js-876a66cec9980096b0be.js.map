{"version":3,"sources":["webpack:///./src/pages/experiences.js"],"names":["data","experiencesJson","experienceGroups","map","experienceGroup","experienceGroupIndex","key","id","name","experiences","filter","exp","show","childExperience","childIndex","className","location","dates","website","href","target","rel","dangerouslySetInnerHTML","__html","description","updated_at"],"mappings":"sJASe,qBACb,IAAMA,EAAI,OAqBV,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,2CAECA,EAAKC,gBAAgBC,iBAAiBC,KAAI,SAACC,EAAiBC,GAAlB,OACzC,6BAASC,IAAKD,GACZ,wBAAIE,GAAIH,EAAgBG,IAAKH,EAAgBI,MAC5CJ,EAAgBK,YAAYC,QAAO,SAAAC,GAAG,OAAIA,EAAIC,QAAMT,KAAI,SAACU,EAAiBC,GAAlB,OACvD,yBAAKR,IAAKQ,GACR,4BACE,uBAAGP,GAAIM,EAAgBN,IAAKM,EAAgBL,MAC5C,0BAAMO,UAAU,yBAAhB,KACCF,EAAgBG,SACjB,0BAAMD,UAAU,yBAAhB,KACCF,EAAgBI,MACfJ,EAAgBK,QAChB,8BACE,0BAAMH,UAAU,yBAAhB,KACA,uBAAGI,KAAMN,EAAgBK,QAASE,OAAO,SAASC,IAAI,uBAAtD,YAHwB,MAO9B,yBAAKC,wBAAyB,CAAEC,OAAQV,EAAgBW,eACxD,qCAgBR,6BACA,6BAEA,4CAAkBxB,EAAKC,gBAAgBwB,gB","file":"component---src-pages-experiences-js-876a66cec9980096b0be.js","sourcesContent":["import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\n// import images from '../images'\n\n// console.log(images)\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    query {\n      experiencesJson {\n        updated_at(formatString: \"DD MMMM YYYY\")\n        experienceGroups {\n          id\n          name\n          experiences {\n            id\n            show\n            name\n            location\n            dates\n            website\n            description\n          }\n        }\n      }\n    }\n  `)\n  \n  return (\n    <>\n      <SEO />\n      <Layout>\n        <h1>Experiences</h1>\n\n        {data.experiencesJson.experienceGroups.map((experienceGroup, experienceGroupIndex) => (\n          <section key={experienceGroupIndex}>\n            <h2 id={experienceGroup.id}>{experienceGroup.name}</h2>\n            {experienceGroup.experiences.filter(exp => exp.show).map((childExperience, childIndex) => (\n              <div key={childIndex}>\n                <h3>\n                  <b id={childExperience.id}>{childExperience.name}</b>\n                  <span className=\"padding-left-right-10\">|</span>\n                  {childExperience.location}\n                  <span className=\"padding-left-right-10\">|</span>\n                  {childExperience.dates}\n                  {!childExperience.website ? null : (\n                    <span>\n                      <span className=\"padding-left-right-10\">|</span>\n                      <a href={childExperience.website} target='_blank' rel='noopener noreferrer'>website</a>\n                    </span>\n                  )}\n                </h3>\n                <div dangerouslySetInnerHTML={{ __html: childExperience.description }} />\n                <br />\n              </div>\n              \n              // <div key={childIndex}>\n              //   <b>{childExperience.name}</b> <span>({childExperience.dates})</span>\n              //   <small>test</small>\n              // </div>\n\n              // <li key={childIndex}>\n              //   {childExperience.name} <span hidden={!childExperience.level}>[{childExperience.level}/5]</span>\n              //   <br /> <small><i>{childExperience.subtitle}</i></small>\n              // </li>\n            ))}\n          </section>\n        ))}\n\n        <br />\n        <br />\n\n        <i>Last updated: {data.experiencesJson.updated_at}</i>\n\n        {/* <p>\n          <img src='{images.experience-ef.png}' alt='' />\n        </p> */}\n      </Layout>\n    </>\n  )\n}"],"sourceRoot":""}