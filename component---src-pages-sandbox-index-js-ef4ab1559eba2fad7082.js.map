{"version":3,"sources":["webpack:///./src/pages/sandbox/index.js","webpack:///./node_modules/core-js/modules/es6.array.find.js"],"names":["query","Sandbox","sandboxChildren","data","sitemapJson","sitemapGroups","find","g","name","links","filter","l","url","className","map","child","childIndex","key","to","$export","$find","forced","Array","P","F","callbackfn","this","arguments","length","undefined"],"mappings":"mMA2BaA,EAAK,YAeHC,UApCC,SAAC,GAAc,IACvBC,EADsB,EAAXC,KACYC,YAAYC,cAAcC,MAAK,SAAAC,GAAC,MAAe,YAAXA,EAAEC,QAAoBC,MAAMC,QAAO,SAAAC,GAAC,MAAc,aAAVA,EAAEC,OAE3G,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,uCACA,8EAGA,wBAAIC,UAAU,gBACXX,EAAgBY,KAAI,SAACC,EAAOC,GAAR,OACnB,wBAAIC,IAAKD,GAAY,kBAAC,IAAD,CAAME,GAAIH,EAAMH,KAAMG,EAAMP,e,iCCjB7D,IAAIW,EAAU,EAAQ,GAClBC,EAAQ,EAAQ,GAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,MAAE,WAAcD,GAAS,KACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/Cf,KAAM,SAAcmB,GAClB,OAAOL,EAAMM,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAGzE,EAAQ,IAAR,CATU","file":"component---src-pages-sandbox-index-js-ef4ab1559eba2fad7082.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport SEO from '../../components/seo'\nimport Layout from '../../components/layout'\n\nconst Sandbox = ({ data }) => {\n  const sandboxChildren = data.sitemapJson.sitemapGroups.find(g => g.name === 'Sandbox').links.filter(l => l.url !== '/sandbox')\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        <h1>Sandbox</h1>\n        <p>\n          Tinkering with Gatsby, and testing other stuff.\n        </p>\n        <ul className=\"margin-top-0\">\n          {sandboxChildren.map((child, childIndex) => (\n            <li key={childIndex}><Link to={child.url}>{child.name}</Link></li>\n          ))}\n        </ul>\n      </Layout>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query {\n    sitemapJson {\n      updated_at(formatString: \"DD MMMM YYYY\")\n      sitemapGroups {\n        name\n        links {\n          name\n          url\n        }\n      }\n    }\n  }\n`\n\nexport default Sandbox","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}