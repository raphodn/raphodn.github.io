{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/navigation.js"],"names":["__webpack_require__","r","__webpack_exports__","d","postsQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_post__WEBPACK_IMPORTED_MODULE_5__","_components_navigation__WEBPACK_IMPORTED_MODULE_6__","Tags","_ref","data","_ref$pageContext","pageContext","nextPagePath","previousPagePath","tag","posts","allMarkdownRemark","edges","a","createElement","Fragment","className","style","font-weight","float","to","map","_ref2","node","key","id","title","frontmatter","date","path","tags","coverImage","excerpt","autoExcerpt","previousPath","previousLabel","nextPath","nextLabel","propTypes","PropTypes","object","isRequired","shape","string","_styles_navigation_module_css__WEBPACK_IMPORTED_MODULE_3__","_styles_navigation_module_css__WEBPACK_IMPORTED_MODULE_3___default","Navigation","navigation","button","iconPrev","buttonText","iconNext"],"mappings":"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","file":"component---src-templates-tags-js-2d69ea1e22cab9f9b275.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql, Link } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\nimport Navigation from '../components/navigation'\n\nimport '../styles/layout.css'\n\nconst Tags = ({\n  data,\n  pageContext: { nextPagePath, previousPagePath, tag },\n}) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        <div className=\"infoBanner\">\n          Posts with tag: <span style={{ 'font-weight': 'bold' }}>#{tag}</span>\n          <span style={{ float: 'right' }}>\n            <Link to=\"/blog\">Remove filter</Link>\n          </span>\n        </div>\n\n        {posts.map(({ node }) => (\n          <Post\n            key={node.id}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            path={node.frontmatter.path}\n            tags={node.frontmatter.tags}\n            coverImage={node.frontmatter.coverImage}\n            excerpt={node.frontmatter.excerpt || node.excerpt.autoExcerpt}\n          />\n        ))}\n\n        <Navigation\n          previousPath={previousPagePath}\n          previousLabel=\"Newer posts\"\n          nextPath={nextPagePath}\n          nextLabel=\"Older posts\"\n        />\n      </Layout>\n    </>\n  )\n}\n\nTags.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    nextPagePath: PropTypes.string,\n    previousPagePath: PropTypes.string,\n  }),\n}\n\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!, $tag: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            path\n            excerpt\n            tags\n            coverImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Tags\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport style from '../styles/navigation.module.css'\n\nconst Navigation = ({ nextPath, previousPath, nextLabel, previousLabel }) =>\n  previousPath || nextPath ? (\n    <div className={style.navigation}>\n      {previousPath && (\n        <span className={style.button}>\n          <Link to={previousPath}>\n            <span className={style.iconPrev}>←</span>\n            <span className={style.buttonText}>{previousLabel}</span>\n          </Link>\n        </span>\n      )}\n      {nextPath && (\n        <span className={style.button}>\n          <Link to={nextPath}>\n            <span className={style.buttonText}>{nextLabel}</span>\n            <span className={style.iconNext}>→</span>\n          </Link>\n        </span>\n      )}\n    </div>\n  ) : null\n\nNavigation.propTypes = {\n  nextPath: PropTypes.string,\n  previousPath: PropTypes.string,\n  nextLabel: PropTypes.string,\n  previousLabel: PropTypes.string,\n}\n\nexport default Navigation\n"],"sourceRoot":""}