{"version":3,"sources":["webpack:///./src/pages/blog/index.js"],"names":["Blog","posts","data","allMarkdownRemark","edges","map","node","key","id","title","frontmatter","date","path","parent","coverImage","tags","excerpt","autoExcerpt","propTypes","PropTypes","object","isRequired","postsQuery"],"mappings":"2FAAA,oIAUMA,EAAO,SAAC,GAAc,IAEIC,EAFL,EAAXC,KAEZC,kBAAqBC,MAGvB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACGH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MACxBE,KAAML,EAAKI,YAAYC,KACvBC,KAAMN,EAAKI,YAAYE,KACvBC,OAAQP,EAAKI,YAAYG,OACzBC,WAAYR,EAAKI,YAAYI,WAC7BC,KAAMT,EAAKI,YAAYK,KACvBC,QAASV,EAAKI,YAAYM,SAAWV,EAAKW,oBAetDjB,EAAKkB,UAAY,CACfhB,KAAMiB,IAAUC,OAAOC,YAOlB,IAAMC,EAAU,aA2CRtB","file":"component---src-pages-blog-index-js-09fef35e4be1265efac3.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../../components/seo'\nimport Layout from '../../components/layout'\nimport Post from '../../components/post'\n// import Navigation from '../../components/navigation'\n\n// const Blog = ({ data, pageContext: { nextPagePath, previousPagePath } }) => {\nconst Blog = ({ data }) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        {posts.map(({ node }) => (\n          <Post\n            key={node.id}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            path={node.frontmatter.path}\n            parent={node.frontmatter.parent}\n            coverImage={node.frontmatter.coverImage}\n            tags={node.frontmatter.tags}\n            excerpt={node.frontmatter.excerpt || node.autoExcerpt}\n          />\n        ))}\n\n        {/* <Navigation\n          previousPath={previousPagePath}\n          previousLabel=\"Newer posts\"\n          nextPath={nextPagePath}\n          nextLabel=\"Older posts\"\n        /> */}\n      </Layout>\n    </>\n  )\n}\n\nBlog.propTypes = {\n  data: PropTypes.object.isRequired,\n  // pageContext: PropTypes.shape({\n  //   nextPagePath: PropTypes.string,\n  //   previousPagePath: PropTypes.string,\n  // }),\n}\n\nexport const postsQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//posts//\" },\n        frontmatter: { published: { eq: true } }\n      }\n      sort: {\n        fields: [frontmatter___date], order: DESC\n      }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          timeToRead\n          wordCount {\n            paragraphs\n            sentences\n            words\n          }\n          frontmatter {\n            title\n            date\n            path\n            parent\n            excerpt\n            tags\n            published\n            coverImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Blog\n"],"sourceRoot":""}