{"version":3,"sources":["webpack:///./src/components/navigation.js","webpack:///./src/templates/tags.js","webpack:///./src/styles/navigation.module.css"],"names":["Navigation","nextPath","previousPath","nextLabel","previousLabel","className","style","navigation","button","to","iconPrev","buttonText","iconNext","Tags","data","pageContext","nextPagePath","previousPagePath","tag","posts","allMarkdownRemark","edges","fontWeight","float","map","node","key","id","title","frontmatter","date","path","tags","coverImage","excerpt","autoExcerpt","module","exports"],"mappings":"iMAmCeA,EA7BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,cAAtC,OACjBF,GAAgBD,EACd,yBAAKI,UAAWC,IAAMC,YACnBL,GACC,0BAAMG,UAAWC,IAAME,QACrB,kBAAC,OAAD,CAAMC,GAAIP,GACR,0BAAMG,UAAWC,IAAMI,UAAvB,KACA,0BAAML,UAAWC,IAAMK,YAAaP,KAIzCH,GACC,0BAAMI,UAAWC,IAAME,QACrB,kBAAC,OAAD,CAAMC,GAAIR,GACR,0BAAMI,UAAWC,IAAMK,YAAaR,GACpC,0BAAME,UAAWC,IAAMM,UAAvB,QAKN,MC+ESC,UA9FF,SAAC,GAGP,IAFLC,EAEI,EAFJA,KAEI,IADJC,YAAeC,EACX,EADWA,aAAcC,EACzB,EADyBA,iBAAkBC,EAC3C,EAD2CA,IAGjBC,EAC1BL,EADFM,kBAAqBC,MAGvB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,yBAAKhB,UAAU,cAAf,mBACkB,0BAAMC,MAAO,CAAEgB,WAAY,SAA3B,IAAuCJ,GACvD,0BAAMZ,MAAO,CAAEiB,MAAO,UACpB,kBAAC,OAAD,CAAMd,GAAG,SAAT,iBADF,MAC0C,kBAAC,OAAD,CAAMA,GAAG,cAAT,cAI3CU,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MACxBE,KAAML,EAAKI,YAAYC,KACvBC,KAAMN,EAAKI,YAAYE,KACvBC,KAAMP,EAAKI,YAAYG,KACvBC,WAAYR,EAAKI,YAAYI,WAC7BC,QAAST,EAAKI,YAAYK,SAAWT,EAAKS,QAAQC,iBAItD,kBAAC,EAAD,CACEjC,aAAce,EACdb,cAAc,cACdH,SAAUe,EACVb,UAAU,oB,qBC7CpBiC,EAAOC,QAAU,CAAC,WAAa,uCAAuC,OAAS,mCAAmC,WAAa,uCAAuC,SAAW,qCAAqC,SAAW","file":"component---src-templates-tags-js-ba9c74d27551f32daf5e.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport style from '../styles/navigation.module.css'\n\nconst Navigation = ({ nextPath, previousPath, nextLabel, previousLabel }) =>\n  previousPath || nextPath ? (\n    <div className={style.navigation}>\n      {previousPath && (\n        <span className={style.button}>\n          <Link to={previousPath}>\n            <span className={style.iconPrev}>←</span>\n            <span className={style.buttonText}>{previousLabel}</span>\n          </Link>\n        </span>\n      )}\n      {nextPath && (\n        <span className={style.button}>\n          <Link to={nextPath}>\n            <span className={style.buttonText}>{nextLabel}</span>\n            <span className={style.iconNext}>→</span>\n          </Link>\n        </span>\n      )}\n    </div>\n  ) : null\n\nNavigation.propTypes = {\n  nextPath: PropTypes.string,\n  previousPath: PropTypes.string,\n  nextLabel: PropTypes.string,\n  previousLabel: PropTypes.string,\n}\n\nexport default Navigation\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql, Link } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\nimport Navigation from '../components/navigation'\n\n// import '../styles/layout.css'\n\nconst Tags = ({\n  data,\n  pageContext: { nextPagePath, previousPagePath, tag },\n}) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        <div className=\"infoBanner\">\n          Posts with tag: <span style={{ fontWeight: 'bold' }}>#{tag}</span>\n          <span style={{ float: 'right' }}>\n            <Link to=\"/blog\">Remove filter</Link> | <Link to=\"/blog/tags\">All tags</Link>\n          </span>\n        </div>\n\n        {posts.map(({ node }) => (\n          <Post\n            key={node.id}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            path={node.frontmatter.path}\n            tags={node.frontmatter.tags}\n            coverImage={node.frontmatter.coverImage}\n            excerpt={node.frontmatter.excerpt || node.excerpt.autoExcerpt}\n          />\n        ))}\n\n        <Navigation\n          previousPath={previousPagePath}\n          previousLabel=\"Newer posts\"\n          nextPath={nextPagePath}\n          nextLabel=\"Older posts\"\n        />\n      </Layout>\n    </>\n  )\n}\n\nTags.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    nextPagePath: PropTypes.string,\n    previousPagePath: PropTypes.string,\n  }),\n}\n\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!, $tag: String!) {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//posts//\" },\n        frontmatter: { tags: { in: [$tag] }, published: { eq: true } }\n      }\n      sort: {\n        fields: [frontmatter___date], order: DESC\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          timeToRead\n          wordCount {\n            paragraphs\n            sentences\n            words\n          }\n          frontmatter {\n            title\n            date\n            path\n            excerpt\n            tags\n            published\n            coverImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Tags\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation-module--navigation--3Zfju\",\"button\":\"navigation-module--button--28kp3\",\"buttonText\":\"navigation-module--buttonText--1Xod2\",\"iconNext\":\"navigation-module--iconNext--3xyJ-\",\"iconPrev\":\"navigation-module--iconPrev--23mg1\"};"],"sourceRoot":""}