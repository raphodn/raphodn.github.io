{"version":3,"sources":["webpack:///./src/pages/lists/index.js"],"names":["Lists","lists","data","allMarkdownRemark","edges","className","map","node","key","frontmatter","path","to","title","propTypes","PropTypes","object","isRequired","listsQuery"],"mappings":"2FAAA,gHAOMA,EAAQ,SAAC,GAAc,IAEGC,EAFJ,EAAXC,KAEbC,kBAAqBC,MAGvB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,qCAEA,4GAIA,wBAAIC,UAAU,gBACXJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,wBAAIC,IAAKD,EAAKE,YAAYC,MACxB,kBAAC,IAAD,CAAMC,GAAIJ,EAAKE,YAAYC,MAAOH,EAAKE,YAAYG,eASjEZ,EAAMa,UAAY,CAChBX,KAAMY,IAAUC,OAAOC,YAGlB,IAAMC,EAAU,aA2CRjB","file":"component---src-pages-lists-index-js-7ac6ef1fd555e1fa73dd.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql, Link } from 'gatsby'\n\nimport SEO from '../../components/seo'\nimport Layout from '../../components/layout'\n\nconst Lists = ({ data }) => {\n  const {\n    allMarkdownRemark: { edges: lists },\n  } = data\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        <h1>Lists</h1>\n        \n        <p>\n          I like to make lists. This page will serve the purpose to list those lists :)\n        </p>\n\n        <ul className=\"margin-top-0\">\n          {lists.map(({ node }) => (\n            <li key={node.frontmatter.path}>\n              <Link to={node.frontmatter.path}>{node.frontmatter.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </Layout>\n    </>\n  )\n}\n\nLists.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport const listsQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//lists//\" },\n        frontmatter: { published: { eq: true } }\n      }\n      sort: {\n        fields: [frontmatter___title], order: ASC\n      }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          timeToRead\n          wordCount {\n            paragraphs\n            sentences\n            words\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            path\n            parent\n            excerpt\n            tags\n            published\n            coverImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Lists"],"sourceRoot":""}