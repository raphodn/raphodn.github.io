{"version":3,"sources":["webpack:///./src/components/navigation.js","webpack:///./src/pages/blog.js"],"names":["Navigation","_ref","nextPath","previousPath","nextLabel","previousLabel","react_default","a","createElement","className","style","navigation","button","gatsby_browser_entry","to","iconPrev","buttonText","iconNext","propTypes","PropTypes","string","__webpack_require__","d","__webpack_exports__","postsQuery","Blog","posts","data","allMarkdownRemark","edges","Fragment","seo","layout","map","_ref2","node","post","key","id","title","frontmatter","date","path","coverImage","tags","excerpt","autoExcerpt","object","isRequired"],"mappings":"2LAMMA,EAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,aAAcC,EAA3BH,EAA2BG,UAAWC,EAAtCJ,EAAsCI,cAAtC,OACjBF,GAAgBD,EACdI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMC,YACnBR,GACCG,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAME,QACrBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAIX,GACRG,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAMK,UAAvB,KACAT,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAMM,YAAaX,KAIzCH,GACCI,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAME,QACrBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAIZ,GACRI,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAMM,YAAaZ,GACpCE,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAMO,UAAvB,QAKN,MAENjB,EAAWkB,UAAY,CACrBhB,SAAUiB,IAAUC,OACpBjB,aAAcgB,IAAUC,OACxBhB,UAAWe,IAAUC,OACrBf,cAAec,IAAUC,QChC3BC,EAAAC,EAAAC,EAAA,+BAAAC,IAUA,IAAMC,EAAO,SAAAxB,GAAc,IAEKyB,EAFLzB,EAAX0B,KAEZC,kBAAqBC,MAGvB,OACEvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuB,SAAA,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACGN,EAAMO,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACT7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEC,IAAKF,EAAKG,GACVC,MAAOJ,EAAKK,YAAYD,MACxBE,KAAMN,EAAKK,YAAYC,KACvBC,KAAMP,EAAKK,YAAYE,KACvBC,WAAYR,EAAKK,YAAYG,WAC7BC,KAAMT,EAAKK,YAAYI,KACvBC,QAASV,EAAKK,YAAYK,SAAWV,EAAKW,mBAetDrB,EAAKP,UAAY,CACfS,KAAMR,IAAU4B,OAAOC,YAOlB,IAAMxB,EAAU,aA8BRC","file":"component---src-pages-blog-js-aa3193457d759fd80c88.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport style from '../styles/navigation.module.css'\n\nconst Navigation = ({ nextPath, previousPath, nextLabel, previousLabel }) =>\n  previousPath || nextPath ? (\n    <div className={style.navigation}>\n      {previousPath && (\n        <span className={style.button}>\n          <Link to={previousPath}>\n            <span className={style.iconPrev}>←</span>\n            <span className={style.buttonText}>{previousLabel}</span>\n          </Link>\n        </span>\n      )}\n      {nextPath && (\n        <span className={style.button}>\n          <Link to={nextPath}>\n            <span className={style.buttonText}>{nextLabel}</span>\n            <span className={style.iconNext}>→</span>\n          </Link>\n        </span>\n      )}\n    </div>\n  ) : null\n\nNavigation.propTypes = {\n  nextPath: PropTypes.string,\n  previousPath: PropTypes.string,\n  nextLabel: PropTypes.string,\n  previousLabel: PropTypes.string,\n}\n\nexport default Navigation\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\nimport Navigation from '../components/navigation'\n\n// const Blog = ({ data, pageContext: { nextPagePath, previousPagePath } }) => {\nconst Blog = ({ data }) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        {posts.map(({ node }) => (\n          <Post\n            key={node.id}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            path={node.frontmatter.path}\n            coverImage={node.frontmatter.coverImage}\n            tags={node.frontmatter.tags}\n            excerpt={node.frontmatter.excerpt || node.autoExcerpt}\n          />\n        ))}\n\n        {/* <Navigation\n          previousPath={previousPagePath}\n          previousLabel=\"Newer posts\"\n          nextPath={nextPagePath}\n          nextLabel=\"Older posts\"\n        /> */}\n      </Layout>\n    </>\n  )\n}\n\nBlog.propTypes = {\n  data: PropTypes.object.isRequired,\n  // pageContext: PropTypes.shape({\n  //   nextPagePath: PropTypes.string,\n  //   previousPagePath: PropTypes.string,\n  // }),\n}\n\nexport const postsQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts//\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            path\n            excerpt\n            tags\n            coverImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Blog\n"],"sourceRoot":""}