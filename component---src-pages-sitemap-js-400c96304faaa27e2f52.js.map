{"version":3,"sources":["webpack:///./src/pages/sitemap.js"],"names":["Sitemap","data","posts","allMarkdownRemark","edges","sitemapJson","sitemapGroups","map","sitemapGroup","sitemapGroupIndex","key","name","className","links","child","childIndex","to","url","node","frontmatter","path","date","title","updated_at","propTypes","PropTypes","object","isRequired","postsQuery"],"mappings":"iNAOMA,EAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEaC,EAE1BD,EAFFE,kBAAqBC,MACrBC,EACEJ,EADFI,YAGF,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,uCAECA,EAAYC,cAAcC,KAAI,SAACC,EAAcC,GAAf,OAC7B,6BAASC,IAAKD,GACZ,4BAAKD,EAAaG,MAClB,wBAAIC,UAAU,gBACXJ,EAAaK,MAAMN,KAAI,SAACO,EAAOC,GAAR,OACtB,wBAAIL,IAAKK,GAAY,kBAAC,IAAD,CAAMC,GAAIF,EAAMG,KAAMH,EAAMH,eAMzD,0CACA,wBAAIC,UAAU,gBACZ,4BAAI,kBAAC,IAAD,CAAMI,GAAG,SAAT,cACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,cACHd,EAAMK,KAAI,gBAAGW,EAAH,EAAGA,KAAH,OACT,wBAAIR,IAAKQ,EAAKC,YAAYC,MACxB,kBAAC,IAAD,CAAMJ,GAAIE,EAAKC,YAAYC,MAAOF,EAAKC,YAAYE,KAAnD,KAA2DH,EAAKC,YAAYG,YAKlF,qCACA,wBAAIV,UAAU,gBACZ,4BAAI,kBAAC,IAAD,CAAMI,GAAG,QAAT,SAGN,6BACA,6BAEA,4CAAkBX,EAAYkB,eAMtCvB,EAAQwB,UAAY,CAClBvB,KAAMwB,IAAUC,OAAOC,YAGlB,IAAMC,EAAU,YAoDR5B","file":"component---src-pages-sitemap-js-400c96304faaa27e2f52.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql, Link } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\n\nconst Sitemap = ({ data }) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n    sitemapJson,\n  } = data\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        <h1>Sitemap</h1>\n\n        {sitemapJson.sitemapGroups.map((sitemapGroup, sitemapGroupIndex) => (\n          <section key={sitemapGroupIndex}>\n            <h2>{sitemapGroup.name}</h2>\n            <ul className=\"margin-top-0\">\n              {sitemapGroup.links.map((child, childIndex) => (\n                <li key={childIndex}><Link to={child.url}>{child.name}</Link></li>\n              ))}\n            </ul>\n          </section>\n        ))}\n\n        <h2>Blog Posts</h2>\n        <ul className=\"margin-top-0\">\n          <li><Link to='/blog'>Blog Home</Link></li>\n          <li><Link to='/blog/tags'>Blog Tags</Link></li>\n          {posts.map(({ node }) => (\n            <li key={node.frontmatter.path}>\n              <Link to={node.frontmatter.path}>{node.frontmatter.date}: {node.frontmatter.title}</Link>\n            </li>\n          ))}\n        </ul>\n\n        <h2>Other</h2>\n        <ul className=\"margin-top-0\">\n          <li><Link to='/404'>404</Link></li>\n        </ul>\n\n        <br />\n        <br />\n\n        <i>Last updated: {sitemapJson.updated_at}</i>\n      </Layout>\n    </>\n  )\n}\n\nSitemap.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport const postsQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//posts//\" },\n        frontmatter: { published: { eq: true } }\n      }\n      sort: {\n        fields: [frontmatter___date], order: ASC\n      }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          timeToRead\n          wordCount {\n            paragraphs\n            sentences\n            words\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            path\n            excerpt\n            tags\n            published\n            coverImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    sitemapJson {\n      updated_at(formatString: \"DD MMMM YYYY\")\n      sitemapGroups {\n        name\n        links {\n          name\n          url\n        }\n      }\n    }\n  }\n`\n\nexport default Sitemap"],"sourceRoot":""}