{"version":3,"sources":["webpack:///./src/styles/post.module.css","webpack:///./src/pages/blog/tags.js","webpack:///./src/helpers/index.js"],"names":["module","exports","data","useStaticQuery","tagsGrouped","allMarkdownRemark","edges","forEach","post","node","frontmatter","tags","tag","Object","keys","map","key","to","toKebabCase","className","style","value","replace","RegExp"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,gCAAgC,MAAQ,4BAA4B,WAAa,iCAAiC,KAAO,2BAA2B,KAAO,2BAA2B,IAAM,0BAA0B,SAAW,+BAA+B,YAAc,oC,kCCD9U,qGAce,qBACb,IAAMC,EAAOC,yBAAe,cA0BtBC,EAAc,GASpB,OARAF,EAAKG,kBAAkBC,MAAMC,SAAQ,SAAAC,GAC/BA,EAAKC,MAAQD,EAAKC,KAAKC,aAAeF,EAAKC,KAAKC,YAAYC,MAC9DH,EAAKC,KAAKC,YAAYC,KAAKJ,SAAQ,SAAAK,GACjCR,EAAYQ,IAAQR,EAAYQ,IAAQ,GAAK,QAMjD,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,yCACCC,OAAOC,KAAKV,GAAaW,KAAI,SAAAH,GAAG,OAC/B,uBAAGI,IAAKJ,GACN,kBAAC,OAAD,CAAMK,GAAE,aAAeC,sBAAYN,GAA3B,IAAoCI,IAAKE,sBAAYN,IAC3D,0BAAMO,UAAWC,IAAMR,KAAvB,IAA8BA,IAEhC,mCAASR,EAAYQ,GAArB,a,mBC5DZZ,EAAOC,QAAQiB,YAAc,SAASG,GACpC,OAAOA,EAAMC,QAAQ,IAAIC,OAAO,aAAc,OAAQ","file":"component---src-pages-blog-tags-js-049a9e4d001bef8875ff.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post-module--post--28Mq2\",\"postShort\":\"post-module--postShort--2fce0\",\"title\":\"post-module--title--3XBo2\",\"coverImage\":\"post-module--coverImage--1GM7V\",\"meta\":\"post-module--meta--3YtjE\",\"tags\":\"post-module--tags--3RbqF\",\"tag\":\"post-module--tag--16U9p\",\"readMore\":\"post-module--readMore--3zWML\",\"postContent\":\"post-module--postContent--1bfnt\"};","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\n\nimport SEO from '../../components/seo'\nimport Layout from '../../components/layout'\nimport { toKebabCase } from '../../helpers'\n\nimport style from '../../styles/post.module.css'\n\n// TODO\n// - order tags alphabetically\n// - get post info for each tag ?\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: {\n          fileAbsolutePath: { regex: \"//posts//\" },\n          frontmatter: { published: { eq: true } }\n        }\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date\n              path\n              parent\n              excerpt\n              tags\n              published\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const tagsGrouped = {}\n  data.allMarkdownRemark.edges.forEach(post => {\n    if (post.node && post.node.frontmatter && post.node.frontmatter.tags) {\n      post.node.frontmatter.tags.forEach(tag => {\n        tagsGrouped[tag] = (tagsGrouped[tag] || 0) + 1\n      })\n    }\n  })\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        <h1>Blog Tags</h1>\n        {Object.keys(tagsGrouped).map(tag => (\n          <p key={tag}>\n            <Link to={`/blog/tag/${toKebabCase(tag)}/`} key={toKebabCase(tag)}>\n              <span className={style.tag}>#{tag}</span>\n            </Link>\n            <span> ({tagsGrouped[tag]})</span>\n          </p>\n        ))}\n      </Layout>\n    </>\n  )\n}","module.exports.toKebabCase = function(value) {\n  return value.replace(new RegExp('(\\\\s|_|-)+', 'gmi'), '-')\n}\n"],"sourceRoot":""}